

# Server vulnerability assessment

data "azurerm_storage_account" "mssql_va" {
  count = try(var.settings.security_alert_policy.vulnerability_assessment.storage_account.key, null) == null ? 0 : 1

  name                = var.storage_accounts[var.settings.security_alert_policy.storage_account.key].name
  resource_group_name = var.storage_accounts[var.settings.security_alert_policy.storage_account.key].resource_group_name
}

resource "azurerm_mssql_server_vulnerability_assessment" "mssql" {
  count = try(var.settings.security_alert_policy.vulnerability_assessment, null) == null ? 0 : 1

  server_security_alert_policy_id = azurerm_mssql_server_security_alert_policy.mssql.0.id
  storage_container_path          = format("%s%s/", data.azurerm_storage_account.mssql_va.0.primary_blob_endpoint, try(var.settings.security_alert_policy.vulnerability_assessment.storage_account.container_path, "vascans"))
  storage_account_access_key      = data.azurerm_storage_account.mssql_va.0.primary_access_key
  recurring_scans {
    enabled                   = try(var.settings.security_alert_policy.vulnerability_assessment.enabled, true)
    email_subscription_admins = try(var.settings.security_alert_policy.vulnerability_assessment.email_subscription_admins, false)
    emails                    = try(var.settings.security_alert_policy.vulnerability_assessment.email_addresses, null)
  }
}

